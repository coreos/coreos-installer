---
name: Rust
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  # Minimum supported Rust version (MSRV)
  ACTIONS_MSRV_TOOLCHAIN: 1.46.0
  # Pinned toolchain for linting
  ACTIONS_LINTS_TOOLCHAIN: 1.53.0

jobs:
  tests-stable:
    name: "Tests, stable toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"
          default: true
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
      - name: cargo build (rdcore)
        run: cargo build --features rdcore
      - name: cargo test (rdcore)
        run: cargo test --features rdcore
  tests-msrv:
    name: "Tests, minimum supported toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env['ACTIONS_MSRV_TOOLCHAIN']  }}
          default: true
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
      - name: cargo build (rdcore)
        run: cargo build --features rdcore
      - name: cargo test (rdcore)
        run: cargo test --features rdcore
  lints:
    name: "Lints, pinned toolchain"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env['ACTIONS_LINTS_TOOLCHAIN']  }}
          default: true
          components: rustfmt, clippy
      - name: cargo fmt (check)
        run: cargo fmt -- --check -l
      - name: cargo clippy (warnings)
        run: cargo clippy -- -D warnings
      - name: cargo clippy (rdcore, warnings)
        run: cargo clippy --features rdcore -- -D warnings
      - name: cargo build
        run: cargo build
      - name: Help text line length
        run: tests/help.sh
  tests-other-channels:
    name: "Tests, unstable toolchain"
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        channel:
          - "beta"
          - "nightly"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}
          default: true
      - name: cargo build
        run: cargo build
      - name: cargo test
        run: cargo test
      - name: cargo build (rdcore)
        run: cargo build --features rdcore
      - name: cargo test (rdcore)
        run: cargo test --features rdcore
